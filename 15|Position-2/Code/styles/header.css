.header {
    display: flex;
    flex-direction: row;
    justify-content: space-between;

    position: fixed;
    top: 0px;
    left: 0px;
    right: 0px;
    height: 55px;

    /* 
    Before setting the position of thumbnail-row to be relative, all the elements except header are static, so they all appear at the back of the header! 
    
    However, after setting the position of thumbnail-row to be relative, thumbnail-row has the same z-index value as header (they both have the default value: 0), but since it is written later in the code, thumbnail-row will appear in front! 
    
    We should set the z-index of header to be a very large number so that it always appears in font of other elements!!! 
    */
    z-index: 100;

    background-color: white;
    border-bottom: 1px solid rgb(228, 228, 228);
}


.left-section {
    display: flex;
    flex-direction: row;
    align-items: center;
}
.hamburger-menu {
    height: 24px;
    margin-left: 24px;
    margin-right: 24px;
}
.youtube-logo {
    height: 20px;
}


.middle-section {
    flex: 1;
    max-width: 500px;
    margin-left: 70px;
    margin-right: 35px; 

    display: flex;
    flex-direction: row;
    align-items: center;
}
.search-bar {
    font-size: 16px;
    height: 36px;
    flex: 1;
    padding-left: 10px;
    border: 1px solid rgb(192, 192, 192);
    border-radius: 2px;
    box-shadow: inset 1px 2px 3px rgba(0, 0, 0, 0.05);

    width: 0px;
}
.search-bar::placeholder {
    font-family: Roboto, Arial;
    font-size: 16px;
}
.search-button {
    background-color: rgb(240, 240, 240);
    height: 40px;
    width: 66px;
    border: 1px solid rgb(192, 192, 192);
    margin-left: -1px;
    margin-right: 10px;
}
.search-icon {
    height: 25px;
    margin-top: 4px;
}
.voice-search-button {
    background-color: rgb(245, 245, 245);
    height: 40px;
    width: 40px;
    border: none;
    border-radius: 20px;
}
.voice-search-icon {
    height: 24px;
    margin-top: 4px;
}


.right-section {
    width: 180px;
    margin-right: 20px;
    
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;

    /* flex-shrink: 0; */
}
.upload-icon {
    height: 24px;
}
.youtube-apps-icon {
    height: 24px;
}
/* 
Similar to video-time, notifications-count is positioned relative to the notifications-icon, but since notifications-icon is an image which is not a container, we can choose right-section as the container. However, since there are so many elements inside the right-section, a better solution is to create a new div: notifications-icon-container to wrap the notifications-icon and notifications-count. Then we should make notifications-icon-container "relative" and notifications-count "absolute"! 

Note that since notifications-count is absolute, it is removed from the normal document flow, so that it will not affect notifications-icon!!!

By doing this, top/right/bottom/left set the distance between notifications-count and notifications-icon-container! Since notifications-icon-container is inside flexbox, notifications-icon-container takes up the same space as notifications-icon! So that setting the distance between notifications-count and notifications-icon-container is actually the same as setting the distance between notifications-count and notifications-icon!!!

*/
.notifications-icon-container {
    position: relative;
}
.notifications-icon {
    height: 24px;
}
.notifications-count {
    background-color: rgb(200, 0, 0);
    color: white;
    font-family: Roboto, Arial;
    font-size: 11px;
    padding: 2px 5px;
    border-radius: 9px;
    
    position: absolute;
    /* Negative values can make the absolute element beyond the edge of the relative element!!! */
    top: -2px;
    right: -5px;
}
.current-user-picture {
    height: 32px;
    border-radius: 16px;
}
